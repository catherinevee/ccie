{
  "permissions": {
    "allow": [
      "Read(//c/Users/cathe/OneDrive/Desktop/github/terragrunt-gcp/**)",
      "Bash(cat:*)",
      "Bash(terragrunt run-all:*)",
      "Bash(gcloud storage ls:*)",
      "Bash(gcloud storage cat:*)",
      "Bash(for state in cross-region europe-west1 europe-west3 global)",
      "Bash(do echo \"=== Checking $state ===\")",
      "Bash(done)",
      "Bash(python:*)",
      "Bash(for state in cross-region europe-west1 europe-west3)",
      "Bash(do echo \"=== $state ===\")",
      "Bash(gcloud projects list:*)",
      "Bash(gcloud compute instances list:*)",
      "Bash(gcloud storage buckets list:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "Bash(tee:*)",
      "Bash(gcloud compute instances delete:*)",
      "Bash(gcloud storage rm:*)",
      "Bash(gcloud compute networks:*)",
      "Bash(terraform init:*)",
      "Bash(terraform validate:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh secret:*)",
      "Bash(gcloud storage buckets create:*)",
      "Bash(gcloud projects get-iam-policy:*)",
      "Bash(gcloud iam service-accounts:*)",
      "Bash(gcloud projects add-iam-policy-binding:*)",
      "Bash(gcloud iam roles describe:*)",
      "Bash(gcloud iam roles delete:*)",
      "Bash(gcloud iam roles undelete:*)",
      "Bash(gcloud iam workload-identity-pools list:*)",
      "Bash(find:*)",
      "Bash(terragrunt destroy:*)",
      "Bash(terraform destroy:*)",
      "Bash(terraform state rm:*)",
      "Bash(terraform state:*)",
      "Bash(grep:*)",
      "Bash(git remote get-url:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud auth list:*)",
      "Bash(PROJECT_ID=\"acme-ecommerce-platform-dev\")",
      "Bash(SA_NAME=\"terraform-ci-sa\")",
      "Bash(echo \"Creating service account: $SA_NAME\")",
      "Bash(SA_EMAIL=\"$SA_NAME@$PROJECT_ID.iam.gserviceaccount.com\")",
      "Bash(echo:*)",
      "Bash(export PROJECT_ID=\"acme-ecommerce-platform-dev\")",
      "Bash(export REGION=\"us-central1\")",
      "Bash(bash:*)",
      "Bash(gcloud storage buckets update:*)",
      "Bash(bq mk:*)",
      "Bash(gcloud alpha bq datasets create:*)",
      "Bash(gcloud storage buckets describe:*)",
      "Bash(gcloud services list:*)",
      "Read(//c/Users/cathe/OneDrive/Desktop/github/catnet/**)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(while read dir)",
      "Bash(do echo -n \"$dir: \")",
      "Bash(detect-secrets scan:*)",
      "Bash(pip install:*)",
      "Read(//c/Users/cathe/OneDrive/Desktop/github/ccie/**)",
      "Read(//c/Users/cathe/OneDrive/Desktop/github/**)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Read(//c/c/Users/cathe/OneDrive/Desktop/github/driftmgr/**)",
      "Bash(go build:*)",
      "Bash(make:*)",
      "Bash(git checkout:*)",
      "Bash(gh repo view:*)",
      "Bash(export DATABASE_URL=\"postgresql://test:test@localhost/test\")",
      "Bash(export REDIS_URL=\"redis://localhost:6379/0\")",
      "Bash(export SECRET_KEY=\"test-secret-key-for-build-check-only\")",
      "Bash(export VAULT_URL=\"http://localhost:8200\")",
      "Bash(export VAULT_TOKEN=\"test-token\")",
      "Bash(export GIT_WEBHOOK_SECRET=\"test-webhook-secret\")",
      "Bash(export DATABASE_URL=\"sqlite:///./test.db\" REDIS_URL=\"redis://localhost:6379/0\" SECRET_KEY=\"test-key\" VAULT_URL=\"http://localhost:8200\" VAULT_TOKEN=\"test\" GIT_WEBHOOK_SECRET=\"test\")",
      "Read(//c/c/Users/cathe/OneDrive/Desktop/github/**)",
      "Bash(if [ ! -f .env ])",
      "Bash(then cp .env.example .env)",
      "Bash(else echo \"âœ… .env already exists\")",
      "Bash(fi)",
      "Bash(test:*)"
    ],
    "deny": [],
    "ask": []
  }
}